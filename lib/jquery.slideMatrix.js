// Generated by CoffeeScript 1.3.1
(function() {

  (function($, window) {
    return $.fn.extend({
      slideMatrix: function() {
        var controls, initialItem, items, nextItem, nextItemSelector, optionsOrArgument, settings, startPos,
          _this = this;
        optionsOrArgument = arguments[0];
        switch (optionsOrArgument) {
          case 'slideTo':
            if (this.currentItem.data('index') != null) {
              nextItemSelector = arguments[1];
              if (nextItemSelector != null) {
                nextItem = $(nextItemSelector);
                if (this.currentItem[0] !== nextItem[0]) {
                  if (nextItem.data('index') > this.currentItem.data('index')) {
                    startPos = this.currentItem.width();
                  } else {
                    startPos = -this.currentItem.width();
                  }
                  nextItem.css({
                    left: startPos
                  });
                  nextItem.show();
                  this.currentItem.animate({
                    left: -startPos
                  }, 250);
                  nextItem.animate({
                    left: 0
                  }, 250, function() {
                    _this.currentItem.hide();
                    return _this.currentItem = nextItem;
                  });
                }
              }
            }
            break;
          case 'slideUp':
            if (this.currentItem.data('up-selector')) {
              nextItem = $(this.currentItem.data('up-selector'));
              nextItem.css({
                top: -this.currentItem.height()
              });
              nextItem.show();
              this.currentItem.animate({
                top: this.currentItem.height()
              }, 250);
              nextItem.animate({
                top: 0
              }, 250, function() {
                _this.currentItem.hide();
                return _this.currentItem = nextItem;
              });
            }
            break;
          case 'slideRight':
            if (this.currentItem.data('right-selector')) {
              nextItem = $(this.currentItem.data('right-selector'));
              nextItem.css({
                left: this.currentItem.width()
              });
              nextItem.show();
              this.currentItem.animate({
                left: -this.currentItem.width()
              }, 250);
              nextItem.animate({
                left: 0
              }, 250, function() {
                _this.currentItem.hide();
                return _this.currentItem = nextItem;
              });
            }
            break;
          case 'slideDown':
            if (this.currentItem.data('down-selector')) {
              nextItem = $(this.currentItem.data('down-selector'));
              nextItem.css({
                top: this.currentItem.height()
              });
              nextItem.show();
              this.currentItem.animate({
                top: -this.currentItem.height()
              }, 250);
              nextItem.animate({
                top: 0
              }, 250, function() {
                _this.currentItem.hide();
                return _this.currentItem = nextItem;
              });
            }
            break;
          case 'slideLeft':
            if (this.currentItem.data('left-selector')) {
              nextItem = $(this.currentItem.data('left-selector'));
              nextItem.css({
                left: -this.currentItem.width()
              });
              nextItem.show();
              this.currentItem.animate({
                left: this.currentItem.width()
              }, 250);
              nextItem.animate({
                left: 0
              }, 250, function() {
                _this.currentItem.hide();
                return _this.currentItem = nextItem;
              });
            }
            break;
          default:
            this.defaultOptions = {
              initialItemFilter: ':first'
            };
            settings = $.extend({}, this.defaultOptions, optionsOrArgument);
            items = this.find('.slideMatrixItem');
            initialItem = items.filter(settings.initialItemFilter);
            controls = $("[data-target='" + this.selector + "']");
            controls.click(function(e) {
              var $control, $target;
              e.preventDefault();
              $control = $(e.target);
              $target = $($control.data('target'));
              _this.slideMatrix($control.data('action'), $control.data('selector'));
              return false;
            });
            items.hide();
            initialItem.show();
            this.currentItem = initialItem;
        }
        return this;
      }
    });
  })(jQuery, this);

}).call(this);
